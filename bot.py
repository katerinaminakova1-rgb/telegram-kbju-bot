import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

GENDER, AGE, HEIGHT, WEIGHT, ACTIVITY = range(5)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton("–ú—É–∂—á–∏–Ω–∞")], [KeyboardButton("–ñ–µ–Ω—â–∏–Ω–∞")]]
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ–µ –ö–ë–ñ–£.\n–í—ã–±–µ—Ä–∏ –ø–æ–ª:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return GENDER

async def gender(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["gender"] = update.message.text.lower()
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç:")
    return AGE

async def age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["age"] = int(update.message.text)
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç (—Å–º):")
    return HEIGHT

async def height(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["height"] = int(update.message.text)
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å (–∫–≥):")
    return WEIGHT

async def weight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["weight"] = float(update.message.text)
    keyboard = [
        [KeyboardButton("1.2 ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")],
        [KeyboardButton("1.375 ‚Äî –ª—ë–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")],
        [KeyboardButton("1.55 ‚Äî —Å—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")],
        [KeyboardButton("1.725 ‚Äî –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")],
        [KeyboardButton("1.9 ‚Äî –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")]
    ]
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return ACTIVITY

async def activity(update: Update, context: ContextTypes.DEFAULT_TYPE):
    activity_str = update.message.text.split(" ‚Äî ")[0]
    activity = float(activity_str)
    data = context.user_data

    if data["gender"].startswith("–º"):
        bmr = 10 * data["weight"] + 6.25 * data["height"] - 5 * data["age"] + 5
    else:
        bmr = 10 * data["weight"] + 6.25 * data["height"] - 5 * data["age"] - 161

    tdee = bmr * activity
    proteins = (tdee * 0.3) / 4
    fats = (tdee * 0.3) / 9
    carbs = (tdee * 0.4) / 4

    await update.message.reply_text(
        f"‚ú® –¢–≤–æ—è –Ω–æ—Ä–º–∞:\n"
        f"–ö–∞–ª–æ—Ä–∏–∏: {tdee:.0f} –∫–∫–∞–ª\n"
        f"–ë–µ–ª–∫–∏: {proteins:.0f} –≥\n"
        f"–ñ–∏—Ä—ã: {fats:.0f} –≥\n"
        f"–£–≥–ª–µ–≤–æ–¥—ã: {carbs:.0f} –≥\n\n"
        f"üöÄ –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º?\n"
        f"–≠—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏. –ù–∞–ø–∏—à–∏ /premium"
    )
    return ConversationHandler.END

async def premium(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíé Premium –¥–æ—Å—Ç—É–ø:\n"
        "‚Äî –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é\n"
        "‚Äî –ü—Ä–∏–º–µ—Ä –º–µ–Ω—é\n"
        "‚Äî –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ë–ñ–£ –ø–æ–¥ —Ü–µ–ª—å (–ø–æ—Ö—É–¥–µ–Ω–∏–µ/–Ω–∞–±–æ—Ä)\n\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: 499‚ÇΩ\n"
        "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏: @—Ç–≤–æ—ë_–∏–º—è (–∏–ª–∏ –¥–æ–±–∞–≤—å –æ–ø–ª–∞—Ç—É –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ Telegram Payments)"
    )

TOKEN = os.getenv("TOKEN")
app = ApplicationBuilder().token(TOKEN).build()

conv = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        GENDER: [MessageHandler(filters.TEXT & ~filters.COMMAND, gender)],
        AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, age)],
        HEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, height)],
        WEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, weight)],
        ACTIVITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, activity)],
    },
    fallbacks=[]
)

app.add_handler(conv)
app.add_handler(CommandHandler("premium", premium))
app.run_polling()
